"reserved    =  \";\" / \"/\" / \"?\" / \":\" / \"@\" / \"&\" / \"=\" / \"+\"\n\t\t\t / \"$\" / \",\"\nunreserved  =  alphanum / mark\nmark        =  \"-\" / \"_\" / \".\" / \"!\" / \"~\" / \"*\" / \"'\"\n\t\t\t / \"(\" / \")\"\nescaped     =  \"%\" HEXDIG HEXDIG\n\nLWS  =  [*WSP CRLF] 1*WSP ; linear whitespace\nSWS  =  [LWS] ; sep whitespace\n\nHCOLON  =  *( SP / HTAB ) \":\" SWS\n\nTEXT-UTF8-TRIM  =  1*TEXT-UTF8char *(*LWS TEXT-UTF8char)\nTEXT-UTF8char   =  %x21-7E / UTF8-NONASCII\nUTF8-NONASCII   =  %xC0-DF 1UTF8-CONT\n\t\t\t  /  %xE0-EF 2UTF8-CONT\n\t\t\t  /  %xF0-F7 3UTF8-CONT\n\t\t\t  /  %xF8-Fb 4UTF8-CONT\n\t\t\t  /  %xFC-FD 5UTF8-CONT\nUTF8-CONT       =  %x80-BF\n\nLHEX  =  DIGIT / %x61-66 ;lowercase a-f\n\ntoken       =  1*(alphanum / \"-\" / \".\" / \"!\" / \"%\" / \"*\"\n\t\t\t / \"_\" / \"+\" / \"`\" / \"'\" / \"~\" )\nseparators  =  \"(\" / \")\" / \"<\" / \">\" / \"@\" /\n\t\t\t \",\" / \";\" / \":\" / \"\" / DQUOTE /\n\t\t\t \"/\" / \"[\" / \"]\" / \"?\" / \"=\" /\n\t\t\t \"{\" / \"}\" / SP / HTAB\nword        =  1*(alphanum / \"-\" / \".\" / \"!\" / \"%\" / \"*\" /\n\t\t\t \"_\" / \"+\" / \"`\" / \"'\" / \"~\" /\n\t\t\t \"(\" / \")\" / \"<\" / \">\" /\n\t\t\t \":\" / \"\" / DQUOTE /\n\t\t\t \"/\" / \"[\" / \"]\" / \"?\" /\n\t\t\t \"{\" / \"}\" )\n\nSTAR    =  SWS \"*\" SWS ; asterisk\nSLASH   =  SWS \"/\" SWS ; slash\nEQUAL   =  SWS \"=\" SWS ; equal\nLPAREN  =  SWS \"(\" SWS ; left parenthesis\nRPAREN  =  SWS \")\" SWS ; right parenthesis\nRAQUOT  =  \">\" SWS ; right angle quote\nLAQUOT  =  SWS \"<\"; left angle quote\nCOMMA   =  SWS \",\" SWS ; comma\nSEMI    =  SWS \";\" SWS ; semicolon\nCOLON   =  SWS \":\" SWS ; colon\nLDQUOT  =  SWS DQUOTE; open double quotation mark\nRDQUOT  =  DQUOTE SWS ; close double quotation mark\n\ncomment  =  LPAREN *(ctext / quoted-pair / comment) RPAREN\nctext    =  %x21-27 / %x2A-5B / %x5D-7E / UTF8-NONASCII\n\t\t  / LWS\n\nquoted-string  =  SWS DQUOTE *(qdtext / quoted-pair ) DQUOTE\nqdtext         =  LWS / %x21 / %x23-5B / %x5D-7E\n\t\t\t\t/ UTF8-NONASCII\n\nquoted-pair  =  \"\" (%x00-09 / %x0B-0C\n                / %x0E-7F)\n\nSIP-URI          =  \"sip:\" [ userinfo ] hostport\n                    uri-parameters [ headers ]\nSIPS-URI         =  \"sips:\" [ userinfo ] hostport\n                    uri-parameters [ headers ]\nuserinfo         =  ( user / telephone-subscriber ) [ \":\" password ] \"@\"\nuser             =  1*( unreserved / escaped / user-unreserved )\nuser-unreserved  =  \"&\" / \"=\" / \"+\" / \"$\" / \",\" / \";\" / \"?\" / \"/\"\npassword         =  *( unreserved / escaped /\n                    \"&\" / \"=\" / \"+\" / \"$\" / \",\" )\nhostport         =  host [ \":\" port ]\nhost             =  hostname / IPv4address / IPv6reference\nhostname         =  *( domainlabel \".\" ) toplabel [ \".\" ]\ndomainlabel      =  alphanum\n                    / alphanum *( alphanum / \"-\" ) alphanum\ntoplabel         =  ALPHA / ALPHA *( alphanum / \"-\" ) alphanum\n\nIPv4address    =  1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT\nIPv6reference  =  \"[\" IPv6address \"]\"\nIPv6address    =  hexpart [ \":\" IPv4address ]\nhexpart        =  hexseq / hexseq \"::\" [ hexseq ] / \"::\" [ hexseq ]\nhexseq         =  hex4 *( \":\" hex4)\nhex4           =  1*4HEXDIG\nport           =  1*DIGIT\n\nuri-parameters    =  *( \";\" uri-parameter)\nuri-parameter     =  transport-param / user-param / method-param\n                     / ttl-param / maddr-param / lr-param / other-param\ntransport-param   =  \"transport=\"\n                     ( \"udp\" / \"tcp\" / \"sctp\" / \"tls\"\n                     / other-transport)\nother-transport   =  token\nuser-param        =  \"user=\" ( \"phone\" / \"ip\" / other-user)\nother-user        =  token\nmethod-param      =  \"method=\" Method\nttl-param         =  \"ttl=\" ttl\nmaddr-param       =  \"maddr=\" host\nlr-param          =  \"lr\"\nother-param       =  pname [ \"=\" pvalue ]\npname             =  1*paramchar\npvalue            =  1*paramchar\nparamchar         =  param-unreserved / unreserved / escaped\nparam-unreserved  =  \"[\" / \"]\" / \"/\" / \":\" / \"&\" / \"+\" / \"$\"\n\nheaders         =  \"?\" header *( \"&\" header )\nheader          =  hname \"=\" hvalue\nhname           =  1*( hnv-unreserved / unreserved / escaped )\nhvalue          =  *( hnv-unreserved / unreserved / escaped )\nhnv-unreserved  =  \"[\" / \"]\" / \"/\" / \"?\" / \":\" / \"+\" / \"$\"\n\nSIP-message    =  Request / Response\nRequest        =  Request-Line\n                  *( message-header )\n                  CRLF\n                  [ message-body ]\nRequest-Line   =  Method SP Request-URI SP SIP-Version CRLF\nRequest-URI    =  SIP-URI / SIPS-URI / absoluteURI\nabsoluteURI    =  scheme \":\" ( hier-part / opaque-part )\nhier-part      =  ( net-path / abs-path ) [ \"?\" query ]\nnet-path       =  \"//\" authority [ abs-path ]\nabs-path       =  \"/\" path-segments\n\nopaque-part    =  uric-no-slash *uric\nuric           =  reserved / unreserved / escaped\nuric-no-slash  =  unreserved / escaped / \";\" / \"?\" / \":\" / \"@\"\n                  / \"&\" / \"=\" / \"+\" / \"$\" / \",\"\npath-segments  =  segment *( \"/\" segment )\nsegment        =  *pchar *( \";\" param )\nparam          =  *pchar\npchar          =  unreserved / escaped /\n                  \":\" / \"@\" / \"&\" / \"=\" / \"+\" / \"$\" / \",\"\nscheme         =  ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nauthority      =  srvr / reg-name\nsrvr           =  [ [ userinfo \"@\" ] hostport ]\nreg-name       =  1*( unreserved / escaped / \"$\" / \",\"\n                  / \";\" / \":\" / \"@\" / \"&\" / \"=\" / \"+\" )\nquery          =  *uric\nSIP-Version    =  \"SIP\" \"/\" 1*DIGIT \".\" 1*DIGIT\n\nmessage-header  =  (Accept\n                /  Accept-Encoding\n                /  Accept-Language\n                /  Alert-Info\n                /  Allow\n                /  Authentication-Info\n                /  Authorization\n                /  Call-ID\n                /  Call-Info\n                /  Contact\n                /  Content-Disposition\n                /  Content-Encoding\n                /  Content-Language\n                /  Content-Length\n                /  Content-Type\n                /  CSeq\n                /  Date\n                /  Error-Info\n                /  Expires\n                /  From\n                /  In-Reply-To\n                /  Max-Forwards\n                /  MIME-Version\n                /  Min-Expires\n                /  Organization\n                /  Priority\n                /  Proxy-Authenticate\n                /  Proxy-Authorization\n                /  Proxy-Require\n                /  Record-Route\n                /  Reply-To\n                /  Require\n                /  Retry-After\n                /  Route\n                /  Server\n                /  Subject\n                /  Supported\n                /  Timestamp\n                /  To\n                /  Unsupported\n                /  User-Agent\n                /  Via\n                /  Warning\n                /  WWW-Authenticate\n                /  extension-header) CRLF\n\nINVITEm           =  %x49.4E.56.49.54.45 ; INVITE in caps\nACKm              =  %x41.43.4B ; ACK in caps\nOPTIONSm          =  %x4F.50.54.49.4F.4E.53 ; OPTIONS in caps\nBYEm              =  %x42.59.45 ; BYE in caps\nCANCELm           =  %x43.41.4E.43.45.4C ; CANCEL in caps\nREGISTERm         =  %x52.45.47.49.53.54.45.52 ; REGISTER in caps\nMethod            =  INVITEm / ACKm / OPTIONSm / BYEm\n                     / CANCELm / REGISTERm\n                     / extension-method\nextension-method  =  token\nResponse          =  Status-Line\n                     *( message-header )\n                     CRLF\n                     [ message-body ]\n\nStatus-Line     =  SIP-Version SP Status-Code SP Reason-Phrase CRLF\nStatus-Code     =  Informational\n               /   Redirection\n               /   Success\n               /   Client-Error\n               /   Server-Error\n               /   Global-Failure\n               /   extension-code\nextension-code  =  3DIGIT\nReason-Phrase   =  *(reserved / unreserved / escaped\n                   / UTF8-NONASCII / UTF8-CONT / SP / HTAB)\n\nInformational  =  \"100\"  ;  Trying\n              /   \"180\"  ;  Ringing\n              /   \"181\"  ;  Call Is Being Forwarded\n              /   \"182\"  ;  Queued\n              /   \"183\"  ;  Session Progress\n\nSuccess  =  \"200\"  ;  OK\n\nRedirection  =  \"300\"  ;  Multiple Choices\n            /   \"301\"  ;  Moved Permanently\n            /   \"302\"  ;  Moved Temporarily\n            /   \"305\"  ;  Use Proxy\n            /   \"380\"  ;  Alternative Service\n\nClient-Error  =  \"400\"  ;  Bad Request\n             /   \"401\"  ;  Unauthorized\n             /   \"402\"  ;  Payment Required\n             /   \"403\"  ;  Forbidden\n             /   \"404\"  ;  Not Found\n             /   \"405\"  ;  Method Not Allowed\n             /   \"406\"  ;  Not Acceptable\n             /   \"407\"  ;  Proxy Authentication Required\n             /   \"408\"  ;  Request Timeout\n             /   \"410\"  ;  Gone\n             /   \"413\"  ;  Request Entity Too Large\n             /   \"414\"  ;  Request-URI Too Large\n             /   \"415\"  ;  Unsupported Media Type\n             /   \"416\"  ;  Unsupported URI Scheme\n             /   \"420\"  ;  Bad Extension\n             /   \"421\"  ;  Extension Required\n             /   \"423\"  ;  Interval Too Brief\n             /   \"480\"  ;  Temporarily not available\n             /   \"481\"  ;  Call Leg/Transaction Does Not Exist\n             /   \"482\"  ;  Loop Detected\n             /   \"483\"  ;  Too Many Hops\n             /   \"484\"  ;  Address Incomplete\n             /   \"485\"  ;  Ambiguous\n             /   \"486\"  ;  Busy Here\n             /   \"487\"  ;  Request Terminated\n             /   \"488\"  ;  Not Acceptable Here\n             /   \"491\"  ;  Request Pending\n             /   \"493\"  ;  Undecipherable\n\nServer-Error  =  \"500\"  ;  Internal Server Error\n             /   \"501\"  ;  Not Implemented\n             /   \"502\"  ;  Bad Gateway\n             /   \"503\"  ;  Service Unavailable\n             /   \"504\"  ;  Server Time-out\n             /   \"505\"  ;  SIP Version not supported\n             /   \"513\"  ;  Message Too Large\n\nGlobal-Failure  =  \"600\"  ;  Busy Everywhere\n               /   \"603\"  ;  Decline\n               /   \"604\"  ;  Does not exist anywhere\n               /   \"606\"  ;  Not Acceptable\n\nAccept         =  \"Accept\" HCOLON\n                   [ accept-range *(COMMA accept-range) ]\naccept-range   =  media-range *(SEMI accept-param)\nmedia-range    =  ( \"*/*\"\n                  / ( m-type SLASH \"*\" )\n                  / ( m-type SLASH m-subtype )\n                  ) *( SEMI m-parameter )\naccept-param   =  (\"q\" EQUAL qvalue) / generic-param\nqvalue         =  ( \"0\" [ \".\" 0*3DIGIT ] )\n                  / ( \"1\" [ \".\" 0*3(\"0\") ] )\ngeneric-param  =  token [ EQUAL gen-value ]\ngen-value      =  token / host / quoted-string\n\nAccept-Encoding  =  \"Accept-Encoding\" HCOLON\n                     [ encoding *(COMMA encoding) ]\nencoding         =  codings *(SEMI accept-param)\ncodings          =  content-coding / \"*\"\ncontent-coding   =  token\n\nAccept-Language  =  \"Accept-Language\" HCOLON\n                     [ language *(COMMA language) ]\nlanguage         =  language-range *(SEMI accept-param)\nlanguage-range   =  ( ( 1*8ALPHA *( \"-\" 1*8ALPHA ) ) / \"*\" )\n\nAlert-Info   =  \"Alert-Info\" HCOLON alert-param *(COMMA alert-param)\nalert-param  =  LAQUOT absoluteURI RAQUOT *( SEMI generic-param )\n\nAllow  =  \"Allow\" HCOLON [Method *(COMMA Method)]\n\nAuthorization     =  \"Authorization\" HCOLON credentials\ncredentials       =  (\"Digest\" LWS digest-response)\n                     / other-response\ndigest-response   =  dig-resp *(COMMA dig-resp)\ndig-resp          =  username / realm / nonce / digest-uri\n                      / dresponse / algorithm / cnonce\n                      / opaque / message-qop\n                      / nonce-count / auth-param\nusername          =  \"username\" EQUAL username-value\nusername-value    =  quoted-string\ndigest-uri        =  \"uri\" EQUAL LDQUOT digest-uri-value RDQUOT\ndigest-uri-value  =  rquest-uri ; Equal to request-uri as specified\n                     by HTTP/1.1\nmessage-qop       =  \"qop\" EQUAL qop-value\n\ncnonce            =  \"cnonce\" EQUAL cnonce-value\ncnonce-value      =  nonce-value\nnonce-count       =  \"nc\" EQUAL nc-value\nnc-value          =  8LHEX\ndresponse         =  \"response\" EQUAL request-digest\nrequest-digest    =  LDQUOT 32LHEX RDQUOT\nauth-param        =  auth-param-name EQUAL\n                     ( token / quoted-string )\nauth-param-name   =  token\nother-response    =  auth-scheme LWS auth-param\n                     *(COMMA auth-param)\nauth-scheme       =  token\n\nAuthentication-Info  =  \"Authentication-Info\" HCOLON ainfo\n                        *(COMMA ainfo)\nainfo                =  nextnonce / message-qop\n                         / response-auth / cnonce\n                         / nonce-count\nnextnonce            =  \"nextnonce\" EQUAL nonce-value\nresponse-auth        =  \"rspauth\" EQUAL response-digest\nresponse-digest      =  LDQUOT *LHEX RDQUOT\n\nCall-ID  =  ( \"Call-ID\" / \"i\" ) HCOLON callid\ncallid   =  word [ \"@\" word ]\n\nCall-Info   =  \"Call-Info\" HCOLON info *(COMMA info)\ninfo        =  LAQUOT absoluteURI RAQUOT *( SEMI info-param)\ninfo-param  =  ( \"purpose\" EQUAL ( \"icon\" / \"info\"\n               / \"card\" / token ) ) / generic-param\n\nContact        =  (\"Contact\" / \"m\" ) HCOLON\n                  ( STAR / (contact-param *(COMMA contact-param)))\ncontact-param  =  (name-addr / addr-spec) *(SEMI contact-params)\nname-addr      =  [ display-name ] LAQUOT addr-spec RAQUOT\naddr-spec      =  SIP-URI / SIPS-URI / absoluteURI\ndisplay-name   =  *(token LWS)/ quoted-string\n\ncontact-params     =  c-p-q / c-p-expires\n                      / contact-extension\nc-p-q              =  \"q\" EQUAL qvalue\nc-p-expires        =  \"expires\" EQUAL delta-seconds\ncontact-extension  =  generic-param\ndelta-seconds      =  1*DIGIT\n\nContent-Disposition   =  \"Content-Disposition\" HCOLON\n                         disp-type *( SEMI disp-param )\ndisp-type             =  \"render\" / \"session\" / \"icon\" / \"alert\"\n                         / disp-extension-token\n\ndisp-param            =  handling-param / generic-param\nhandling-param        =  \"handling\" EQUAL\n                         ( \"optional\" / \"required\"\n                         / other-handling )\nother-handling        =  token\ndisp-extension-token  =  token\n\nContent-Encoding  =  ( \"Content-Encoding\" / \"e\" ) HCOLON\n                     content-coding *(COMMA content-coding)\n\nContent-Language  =  \"Content-Language\" HCOLON\n                     language-tag *(COMMA language-tag)\nlanguage-tag      =  primary-tag *( \"-\" subtag )\nprimary-tag       =  1*8ALPHA\nsubtag            =  1*8ALPHA\n\nContent-Length  =  ( \"Content-Length\" / \"l\" ) HCOLON 1*DIGIT\nContent-Type     =  ( \"Content-Type\" / \"c\" ) HCOLON media-type\nmedia-type       =  m-type SLASH m-subtype *(SEMI m-parameter)\nm-type           =  discrete-type / composite-type\ndiscrete-type    =  \"text\" / \"image\" / \"audio\" / \"video\"\n                    / \"application\" / extension-token\ncomposite-type   =  \"message\" / \"multipart\" / extension-token\nextension-token  =  ietf-token / x-token\nietf-token       =  token\nx-token          =  \"x-\" token\nm-subtype        =  extension-token / iana-token\niana-token       =  token\nm-parameter      =  m-attribute EQUAL m-value\nm-attribute      =  token\nm-value          =  token / quoted-string\n\nCSeq  =  \"CSeq\" HCOLON 1*DIGIT LWS Method\n\nDate          =  \"Date\" HCOLON SIP-date\nSIP-date      =  rfc1123-date\nrfc1123-date  =  wkday \",\" SP date1 SP time SP \"GMT\"\ndate1         =  2DIGIT SP month SP 4DIGIT\n                 ; day month year (e.g., 02 Jun 1982)\ntime          =  2DIGIT \":\" 2DIGIT \":\" 2DIGIT\n                 ; 00:00:00 - 23:59:59\nwkday         =  \"Mon\" / \"Tue\" / \"Wed\"\n                 / \"Thu\" / \"Fri\" / \"Sat\" / \"Sun\"\nmonth         =  \"Jan\" / \"Feb\" / \"Mar\" / \"Apr\"\n                 / \"May\" / \"Jun\" / \"Jul\" / \"Aug\"\n                 / \"Sep\" / \"Oct\" / \"Nov\" / \"Dec\"\n\nError-Info  =  \"Error-Info\" HCOLON error-uri *(COMMA error-uri)\n\nerror-uri   =  LAQUOT absoluteURI RAQUOT *( SEMI generic-param )\n\nExpires     =  \"Expires\" HCOLON delta-seconds\nFrom        =  ( \"From\" / \"f\" ) HCOLON from-spec\nfrom-spec   =  ( name-addr / addr-spec )\n               *( SEMI from-param )\nfrom-param  =  tag-param / generic-param\ntag-param   =  \"tag\" EQUAL token\n\nIn-Reply-To  =  \"In-Reply-To\" HCOLON callid *(COMMA callid)\n\nMax-Forwards  =  \"Max-Forwards\" HCOLON 1*DIGIT\n\nMIME-Version  =  \"MIME-Version\" HCOLON 1*DIGIT \".\" 1*DIGIT\n\nMin-Expires  =  \"Min-Expires\" HCOLON delta-seconds\n\nOrganization  =  \"Organization\" HCOLON [TEXT-UTF8-TRIM]\n\nPriority        =  \"Priority\" HCOLON priority-value\npriority-value  =  \"emergency\" / \"urgent\" / \"normal\"\n                   / \"non-urgent\" / other-priority\nother-priority  =  token\n\nProxy-Authenticate  =  \"Proxy-Authenticate\" HCOLON challenge\nchallenge           =  (\"Digest\" LWS digest-cln *(COMMA digest-cln))\n                       / other-challenge\nother-challenge     =  auth-scheme LWS auth-param\n                       *(COMMA auth-param)\ndigest-cln          =  realm / domain / nonce\n                        / opaque / stale / algorithm\n                        / qop-options / auth-param\nrealm               =  \"realm\" EQUAL realm-value\nrealm-value         =  quoted-string\ndomain              =  \"domain\" EQUAL LDQUOT URI\n                       *( 1*SP URI ) RDQUOT\nURI                 =  absoluteURI / abs-path\nnonce               =  \"nonce\" EQUAL nonce-value\nnonce-value         =  quoted-string\nopaque              =  \"opaque\" EQUAL quoted-string\nstale               =  \"stale\" EQUAL ( \"true\" / \"false\" )\nalgorithm           =  \"algorithm\" EQUAL ( \"MD5\" / \"MD5-sess\"\n                       / token )\nqop-options         =  \"qop\" EQUAL LDQUOT qop-value\n                       *(\",\" qop-value) RDQUOT\nqop-value           =  \"auth\" / \"auth-int\" / token\n\nProxy-Authorization  =  \"Proxy-Authorization\" HCOLON credentials\n\nProxy-Require  =  \"Proxy-Require\" HCOLON option-tag\n                  *(COMMA option-tag)\noption-tag     =  token\n\nRecord-Route  =  \"Record-Route\" HCOLON rec-route *(COMMA rec-route)\nrec-route     =  name-addr *( SEMI rr-param )\nrr-param      =  generic-param\n\nReply-To      =  \"Reply-To\" HCOLON rplyto-spec\nrplyto-spec   =  ( name-addr / addr-spec )\n                 *( SEMI rplyto-param )\nrplyto-param  =  generic-param\nRequire       =  \"Require\" HCOLON option-tag *(COMMA option-tag)\n\nRetry-After  =  \"Retry-After\" HCOLON delta-seconds\n                [ comment ] *( SEMI retry-param )\n\nretry-param  =  (\"duration\" EQUAL delta-seconds)\n                / generic-param\n\nRoute        =  \"Route\" HCOLON route-param *(COMMA route-param)\nroute-param  =  name-addr *( SEMI rr-param )\n\nServer           =  \"Server\" HCOLON server-val *(LWS server-val)\nserver-val       =  product / comment\nproduct          =  token [SLASH product-version]\nproduct-version  =  token\n\nSubject  =  ( \"Subject\" / \"s\" ) HCOLON [TEXT-UTF8-TRIM]\n\nSupported  =  ( \"Supported\" / \"k\" ) HCOLON\n              [option-tag *(COMMA option-tag)]\n\nTimestamp  =  \"Timestamp\" HCOLON 1*(DIGIT)\n               [ \".\" *(DIGIT) ] [ LWS delay ]\ndelay      =  *(DIGIT) [ \".\" *(DIGIT) ]\n\nTo        =  ( \"To\" / \"t\" ) HCOLON ( name-addr\n             / addr-spec ) *( SEMI to-param )\nto-param  =  tag-param / generic-param\n\nUnsupported  =  \"Unsupported\" HCOLON option-tag *(COMMA option-tag)\nUser-Agent  =  \"User-Agent\" HCOLON server-val *(LWS server-val)\n\nVia               =  ( \"Via\" / \"v\" ) HCOLON via-parm *(COMMA via-parm)\nvia-parm          =  sent-protocol LWS sent-by *( SEMI via-params )\nvia-params        =  via-ttl / via-maddr\n                     / via-received / via-branch\n                     / via-extension\nvia-ttl           =  \"ttl\" EQUAL ttl\nvia-maddr         =  \"maddr\" EQUAL host\nvia-received      =  \"received\" EQUAL (IPv4address / IPv6address)\nvia-branch        =  \"branch\" EQUAL token\nvia-extension     =  generic-param\nsent-protocol     =  protocol-name SLASH protocol-version\n                     SLASH transport\nprotocol-name     =  \"SIP\" / token\nprotocol-version  =  token\ntransport         =  \"UDP\" / \"TCP\" / \"TLS\" / \"SCTP\"\n                     / other-transport\nsent-by           =  host [ COLON port ]\nttl               =  1*3DIGIT ; 0 to 255\n\nWarning        =  \"Warning\" HCOLON warning-value *(COMMA warning-value)\nwarning-value  =  warn-code SP warn-agent SP warn-text\nwarn-code      =  3DIGIT\nwarn-agent     =  hostport / pseudonym\n                  ;  the name or pseudonym of the server adding\n                  ;  the Warning header, for use in debugging\nwarn-text      =  quoted-string\npseudonym      =  token\n\nWWW-Authenticate  =  \"WWW-Authenticate\" HCOLON challenge\n\nextension-header  =  header-name HCOLON header-value\nheader-name       =  token\nheader-value      =  *(TEXT-UTF8char / UTF8-CONT / LWS)\nmessage-body  =  *OCTET\n\ntelephone-url         = telephone-scheme \":\"\n                        telephone-subscriber\ntelephone-subscriber  = global-phone-number / local-phone-number\nglobal-phone-number   = \"+\" base-phone-number [isdn-subaddress]\n                        [post-dial] *(area-specifier /\n                        service-provider / future-extension)\nlocal-phone-number    = 1*(phonedigit / dtmf-digit /\n                        pause-character) [isdn-subaddress]\n                        [post-dial] area-specifier\n                        *(area-specifier / service-provider /\n                        future-extension)\narea-specifier        = \";\" phone-context-tag \"=\" phone-context-ident\nphone-context-tag     = \"phone-context\"\nphone-context-ident   = network-prefix / private-prefix\nnetwork-prefix        = global-network-prefix / local-network-prefix\nlocal-network-prefix  = 1*(phonedigit / dtmf-digit / pause-character)\nprivate-prefix        = (%x21-22 / %x24-27 / %x2C / %x2F / %x3A /\n                        %x3C-40 / %x45-4F / %x51-56 / %x58-60 /\n                        %x65-6F / %x71-76 / %x78-7E)\n                        *(%x21-3A / %x3C-7E)\n                        ; Characters in URLs must follow escaping rules\n                        ; as explained in [RFC2396]\n                        ; See sections 1.2 and 2.5.2\nservice-provider      = \";\" provider-tag \"=\" provider-hostname\nprovider-hostname     = domain ; <domain> is defined in [RFC1035]\n                        ; See section 2.5.10\nfuture-extension      = \";\" 1*(token-char) [\"=\" ((1*(token-char)\n                        [\"?\" 1*(token-char)]) / quoted-string )]\n                        ; See section 2.5.11 and [RFC2543]\ntoken-char            = (%x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39\n                        / %x41-5A / %x5E-7A / %x7C / %x7E)\n                        ; Characters in URLs must follow escaping rules\n                        ; as explained in [RFC2396]\n                        ; See sections 1.2 and 2.5.11\nquoted-string         = %x22 *( \"\" CHAR / (%x20-21 / %x23-7E\n                        / %x80-FF )) %x22\n                        ; Characters in URLs must follow escaping rules\n                        ; as explained in [RFC2396]\n                        ; See sections 1.2 and 2.5.11\npause-character       = one-second-pause / wait-for-dial-tone\n\nfax-url          = fax-scheme \":\" fax-subscriber\nfax-subscriber   = fax-global-phone / fax-local-phone\nfax-global-phone = \"+\" base-phone-number [isdn-subaddress]\n\t\t\t\t [t33-subaddress] [post-dial]\n\t\t\t\t *(area-specifier / service-provider /\n\t\t\t\t future-extension)\nfax-local-phone  = 1*(phonedigit / dtmf-digit /\n\t\t\t\t pause-character) [isdn-subaddress]\n\t\t\t\t [t33-subaddress] [post-dial]\n\t\t\t\t area-specifier\n\t\t\t\t *(area-specifier / service-provider /\n\t\t\t\t future-extension)\n\nmodem-url          = modem-scheme \":\" remote-host\nremote-host        = telephone-subscriber *(modem-params / recommended-params)"
